GTCEuStartupEvents.registry('gtceu:machine', event => {
    event.create('zpm_large_miner', 'multiblock', holder => $LargeMinerMachine(holder, GTValues.ZPM, 64/GTValues.ZPM, 2*GTValues.ZPM - 5,7,6))
        .rotationState(RotationState.NON_Y_AXIS)
        .recipeType('macerator')
        //.appearanceBlock(GTBlocks.get('kubejs:mana_steel_casing'))
        .pattern((definition) => FactoryBlockPattern.start()
                .aisle("XXX", "#F#", "#F#", "#F#", "###", "###", "###")
                .aisle("XXX", "FCF", "FCF", "FCF", "#F#", "#F#", "#F#")
                .aisle("XSX", "#F#", "#F#", "#F#", "###", "###", "###")
                .where('S', Predicates.controller(Predicates.blocks(definition.get())))
                .where('X', Predicates.blocks('kubejs:osmiridium_casing')
                        .or(Predicates.abilities(PartAbility.EXPORT_ITEMS).setMaxGlobalLimited(1).setPreviewCount(1))
                        .or(Predicates.abilities(PartAbility.IMPORT_FLUIDS).setExactLimit(1).setPreviewCount(1))
                        .or(Predicates.abilities(PartAbility.INPUT_ENERGY).setMinGlobalLimited(1)
                                .setMaxGlobalLimited(2).setPreviewCount(1)))
                .where('C', Predicates.blocks('kubejs:osmiridium_casing'))
                .where('F', Predicates.blocks('gtceu:osmiridium_frame'))
                .where('#', Predicates.any())
                .build())
        .workableCasingRenderer('kubejs:block/osmiridium_casing', 'gtceu:block/multiblock/large_miner', false)
})