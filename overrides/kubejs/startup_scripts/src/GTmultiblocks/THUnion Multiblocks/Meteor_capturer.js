GTCEuStartupEvents.registry('gtceu:recipe_type', event => {
 
    let builder=event.create('mark_of_falling_tower')
    .category('ctnh')
    .setMaxIOSize(1, 32, 1, 0)
    .setEUIO('in')
    .setProgressBar(GuiTextures.PROGRESS_BAR_ARROW, FillDirection.LEFT_TO_RIGHT)
    .setSound(GTSoundEntries.MINER);
})
function powerBasedParallel(basic, addition) {
    return (machine, recipe, params, result) =>
    {
        
        var hatch=4;
        machine.getParts().forEach( part => {
            try{
                hatch=part.getCurrentParallel();
                hatch=Number(part.getTier());
            }catch(error){
            }
        });
        //console.log(hatch);
        
        var bonus=0-$RecipeHelper.getRecipeEUtTier(recipe)+Number(machine.getTier());
        if(bonus>0) {
            return GTRecipeModifiers.accurateParallel(machine, recipe, (hatch-3)*(bonus*addition+basic), false).getFirst();
        } else{ 
            return GTRecipeModifiers.accurateParallel(machine, recipe, (hatch-3)*basic, false).getFirst();
        }    
    }
} 

GTCEuStartupEvents.registry('gtceu:machine', event => {
    /**
     * @type {Internal.CustomMultiblockBuilder}
     */
    let builder=event.create('meteor_capturer', 'multiblock')
    for(let i=0;i<=5;i++) builder.tooltips(Component.translatable(`ctnh.${builder.id}.${i}`));
    builder.rotationState(RotationState.NON_Y_AXIS)
        .appearanceBlock(GTBlocks.CASING_STEEL_SOLID)
        .noRecipeModifier()
        .recipeType(GTRecipeTypes.get('mark_of_falling_tower'))
        .workableCasingRenderer(
            "kubejs:block/blood_casing",
            "gtceu:block/machines/miner",
            false
        )
        .onWorking(machine=>{
            var pos=machine.self().getPos();
            var level=machine.self().getLevel();
            var progress=machine.getProgress();
            var maxprogress=machine.getMaxProgress();
            var recipe = machine.getRecipeLogic().lastOriginRecipe
            var radius= recipe == null ? 8 : recipe.data.getInt('radius');
            var rock= recipe == null ? 'minecraft:stone' : recipe.data.getString('rock');
            var block;
            try{
                block=Block.getBlock(rock).getBlockStates()[0];
            }catch(error){
                block=Blocks.STONE.getBlockStates()[0];
            }
            //build
            var center=pos.offset(0,15,0);
            if(radius<=0 || maxprogress<=15) return true;
            if(progress==0){
                for(var i=-radius;i<=radius;i++){
                    for(var j=-radius;j<=radius;j++){
                        for(var k=-radius;k<=radius;k++){
                            if(i*i+j*j+k*k<=(radius+0.5)*(radius+0.5)){
                                try{
                                    level.setBlockAndUpdate(center.offset(i,j,k), block);
                                }catch(error){
                                    block=Blocks.STONE.getBlockStates()[0];
                                }
                                
                            }
                        }
                    }
                }
            }else if(progress>=maxprogress/5){
                var piece=maxprogress*0.8/(radius*2+2);
                var piece2=piece/(radius*2+2);
                if(piece2>1){
                    var phase=progress-maxprogress/5;
                    if(Math.trunc(phase/piece2)>Math.trunc((phase-1)/piece2)){
                        var i=-(Math.trunc(phase/piece2)%(radius*2+2))+radius+1;
                        var j=-Math.trunc(phase/piece)+radius+1;
                        for(var k=-radius;k<=radius;k++){
                            if(i*i+j*j+k*k<=(radius+0.5)*(radius+0.5)){
                                    level.setBlockAndUpdate(center.offset(i,j,k), Blocks.AIR.blockStates[0]);
                            }
                        }
                    }
                }
                else{
                    var phase=progress-maxprogress/5;
                    if(Math.trunc(phase/piece)>Math.trunc((phase-1)/piece)){
                        var j=-Math.trunc(phase/piece)+radius+1;
                        for(var i=-radius;i<=radius;i++){
                            for(var k=-radius;k<=radius;k++){
                                if(i*i+j*j+k*k<=(radius+0.5)*(radius+0.5)){
                                    level.setBlockAndUpdate(center.offset(i,j,k), Blocks.AIR.blockStates[0]);
                                }
                            }
                        }
                    }
                }
                
            }
            return true;
        })
        .pattern(definition => FactoryBlockPattern.start()
            .aisle("###########################", "###########################", "###########################", "###########################", "###########################", "###########################", "###########################", "###########################", "###########################", "###########################", "###########################", "###########################", "###########################", "#############B#############", "############BBB############", "###########BCCCB###########", "##########BBCCCBB##########", "###########BCCCB###########", "############BBB############", "#############B#############", "###########################", "###########################", "###########################", "###########################", "###########################", "###########################", "###########################", "###########################", "###########################", "###########################") 
            .aisle
            .aisle
            .aisle
            .aisle
            .aisle
            .aisle
            .aisle("###########DDDDD###########", "###########################", "###########################", "###########################", "###########################", "#############B#############", "###########################", "######B#############B######", "#####B###############B#####", "####B#################B####", "###########################", "###########################", "###########################", "###########################", "###########################", "###########################", "##B#####################B##", "###########################", "###########################", "###########################", "###########################", "###########################", "###########################", "####B#################B####", "#####B###############B#####", "######B#############B######", "###########################", "#############B#############", "###########################", "###########################") 
            .aisle
            .aisle
            .aisle
            .aisle
            .aisle
            .aisle
            .aisle
            .aisle
            .aisle
            .aisle
            .aisle
            .aisle
            .aisle
            .aisle
            .aisle
            .aisle
            .aisle
            .aisle
            .aisle("###########################", "###########################", "###########################", "###########################", "###########################", "###########################", "###########################", "###########################", "###########################", "###########################", "###########################", "###########################", "###########################", "#############B#############", "############BBB############", "###########BCCCB###########", "##########BBCCCBB##########", "###########BCCCB###########", "############BBB############", "#############B#############", "###########################", "###########################", "###########################", "###########################", "###########################", "###########################", "###########################", "###########################", "###########################", "###########################") 
            .where("#", Predicates.any())
            .where("B", Predicates.blocks("kubejs:blood_casing"))
            .where("C", Predicates.blocks("kubejs:force_field_casing"))
            .where('D', Predicates.blocks("kubejs:blood_casing")
                        .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                    )
            .where("@", Predicates.controller(Predicates.blocks(definition.get())))
            .build()
        )       
})

//This multiblock comes from the modpack THUnion自制整合包vol.2, and is made by Sigmit64